OASISFormat: 0.4
Name:        ocaml-sqlexpr
Version:     0.7.0
Synopsis:    Type-safe, convenient SQLite database access.
Authors:     Mauricio Fernandez <mfp@acm.org>
Maintainers: Mauricio Fernandez <mfp@acm.org>
License:     LGPL-2.1 with OCaml linking exception
Plugins:     DevFiles (0.3)
BuildTools:  ocamlbuild
Homepage:    http://github.com/mfp/ocaml-sqlexpr
OCamlVersion: >= 4.01
AlphaFeatures: ocamlbuild_more_args
XOCamlbuildPluginTags: package(cppo_ocamlbuild), package(ppx_driver.ocamlbuild)
FilesAB:     src/META.ab
Description:
  Minimalistic library and syntax extension for type-safe, convenient execution
  of SQL statements. Currently compatible with Sqlite3.
  .
  Sqlexpr features:
  .
  * automated prepared statement caching, param binding, data extraction, error
    checking (including automatic stmt reset to avoid BUSY/LOCKED errors in
    subsequent queries), stmt finalization on db close, etc.
  .
  * HOFs like iter, fold, transaction
  .
  * support for different concurrency models: everything is functorized over a
    THREAD monad, so you can for instance do concurrent folds/iters with Lwt
  .
  * support for SQL stmt syntax checks and some extra semantic checking (column
    names, etc)

SourceRepository github
  Type:     git
  Location: git://github.com/mfp/ocaml-sqlexpr.git

Library sqlexpr
  Path:             src
  BuildTools:       ocamlbuild
  Modules:          Sqlexpr_concurrency,
                    Sqlexpr_sqlite,
                    Sqlexpr_sqlite_lwt,
                    Sqlexpr_utils
  BuildDepends:     csv, sqlite3, estring, lwt (>= 2.2.0), lwt.syntax, lwt.unix,
                    unix, threads
  XMETADescription: SQLite database access.

Library "sqlexpr_syntax"
  Path:             src/syntax/
  FindlibName:      syntax
  FindlibParent:    sqlexpr
  Modules:          Pa_sql
  BuildDepends:     camlp4.lib, camlp4.quotations.r, estring

Library "ppx_sqlexpr"
  Path:             src/ppx/
  FindlibName:      ppx
  FindlibParent:    sqlexpr
  Modules:          Sqlexpr_parser, Ppx_sqlexpr
  BuildDepends:
    compiler-libs.common,
    threads,
    ppx_core,
    ppx_driver,
    ppx_tools,
    ppx_tools.metaquot,
    re.pcre,
    sqlexpr

Executable "ppx"
  Path:             src/as_ppx/
  MainIs:           ppx.ml
  BuildDepends:     sqlexpr.ppx, ppx_driver
  CompiledObject:   best
  Install:          true

Executable "example"
  Path:           tests/
  MainIs:         example.ml
  BuildDepends:   sqlexpr.syntax, sqlexpr
  CompiledObject: best
  Install:        false
  Build:          false  # FIXME

Executable "example_ppx"
  Path:           tests/
  MainIs:         example_ppx.ml
  ByteOpt:        -ppx ../_build/as_ppx/ppx.native
  NativeOpt:      -ppx ../_build/as_ppx/ppx.native
  BuildDepends:   sqlexpr
  CompiledObject: best
  Install:        false
  Build:          false  # FIXME

Executable "t_ppx_parse"
  Path:           tests/
  MainIs:         t_ppx_parse.ml
  ByteOpt:        -ppx ../_build/as_ppx/ppx.native
  NativeOpt:      -ppx ../_build/as_ppx/ppx.native
  BuildDepends:   sqlexpr, oUnit
  CompiledObject: best
  Install:        false
  Build:          true

Document sqlexpr
    Title:                API reference for Sqlexpr
    Type:                 ocamlbuild (0.3)
    InstallDir:           $htmldir/sqlexpr
    BuildTools+:          ocamldoc
    XOCamlbuildPath:      .
    XOCamlbuildLibraries: sqlexpr
